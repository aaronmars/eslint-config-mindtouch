module.exports = {
    'rules': {

        // Possible Errors
        'comma-dangle': 1,
        'no-cond-assign': 1,
        'no-console': 1,
        'no-constant-condition': 1,
        'no-control-regex': 1,
        'no-dupe-args': 1,
        'no-dupe-keys': 1,
        'no-duplicate-case': 1,
        'no-empty': 1,
        'no-empty-character-class': 1,
        'no-ex-assign': 1,
        'no-extra-boolean-cast': 1,
        'no-extra-parens': [ 1, 'functions' ],
        'no-extra-semi': 1,
        'no-func-assign': 1,
        'no-inner-declarations': 1,
        'no-invalid-regexp': 1,
        'no-irregular-whitespace': 1,
        'no-negated-in-lhs': 1,
        'no-obj-calls': 1,
        'no-regex-spaces': 1,
        'no-sparse-arrays': 1,
        'no-unexpected-multiline': 1,
        'no-unreachable': 1,
        'use-isnan': 1,
        'valid-typeof': 1,

        // Best Practices
        'array-callback-return': 1,
        'block-scoped-var': 1,
        'curly': 1,
        'dot-location': [ 1, 'property' ],
        'dot-notation': 1,
        'eqeqeq': 1,
        'guard-for-in': 1,
        'no-caller': 1,
        'no-div-regex': 1,
        'no-else-return': 1,
        'no-empty-pattern': 1,
        'no-eq-null': 1,
        'no-eval': 1,
        'no-extra-bind': 1,
        'no-fallthrough': 1,
        'no-floating-decimal': 1,
        'no-implicit-coercion': 1,
        'no-implied-eval': 1,
        'no-iterator': 1,
        'no-labels': 1,
        'no-lone-blocks': 1,
        'no-loop-func': 1,
        'no-multi-spaces': 1,
        'no-multi-str': 1,
        'no-native-reassign': 1,
        'no-new-func': 1,
        'no-new-wrappers': 1,
        'no-new': 1,
        'no-proto': 1,
        'no-redeclare': 1,
        'no-return-assign': 1,
        'no-script-url': 1,
        'no-self-assign': 1,
        'no-self-compare': 1,
        'no-sequences': 1,
        'no-throw-literal': 1,
        'no-unmodified-loop-condition': 1,
        'no-unused-expressions': 1,
        'no-useless-call': 1,
        'no-useless-concat': 1,
        'no-useless-escape': 1,
        'no-void': 1,
        'no-with': 1,
        'radix': 1,
        'wrap-iife': [ 1, 'inside' ],
        'yoda': 1,
        'object-shorthand': 1,

        // Variables
        'no-delete-var': 1,
        'no-label-var': 1,
        'no-shadow': 1,
        'no-shadow-restricted-names': 1,
        'no-undef': 1,
        'no-undef-init': 1,
        'no-undefined': 1,
        'no-unused-vars': 1,
        'no-use-before-define': 1,

        // Style
        'array-bracket-spacing': [ 1, 'always' ],
        'brace-style': 1,
        'camelcase': 1,
        'comma-spacing': [ 1, { 'before': false, 'after': true } ],
        'comma-style': 1,
        'computed-property-spacing': 1,
        'eol-last': 1,
        'indent': [ 1, 4, { 'SwitchCase': 1 } ],
        'key-spacing': [ 1, { 'beforeColon': false, 'afterColon': true } ],
        'keyword-spacing': [ 1, {
            'overrides': {
                'catch': { 'after': false },
                'for': { 'after': false },
                'if': { 'after': false },
                'switch': { 'after': false },
                'while': { 'after': false }
            }
        } ],
        'lines-around-comment': [ 1, { 'beforeLineComment': true, 'beforeBlockComment': true } ],
        'new-cap': [ 1, { 'newIsCap': true, 'capIsNew': false } ],
        'new-parens': 1,
        'no-lonely-if': 1,
        'no-mixed-spaces-and-tabs': 1,

        // known issue - conflicts with lines-arround-comment when trying to collapse all space, so the rule lets 1 space through.
        'no-multiple-empty-lines': [ 1, { 'max': 1 } ],
        'no-nested-ternary': 1,
        'no-spaced-func': 1,
        'no-trailing-spaces': 1,
        'no-unneeded-ternary': 1,
        'no-whitespace-before-property': 1,
        'object-curly-spacing': [ 1, 'always' ],
        'quotes': [ 1, 'single' ],
        'semi': [ 1, 'always' ],
        'semi-spacing': [ 1, { 'before': false, 'after': true } ],
        'space-before-blocks': 1,
        'space-before-function-paren': [ 1, {
            "anonymous": "never",
            "named": "never",
            "asyncArrow": "always"
        } ],
        'space-in-parens': [ 1, 'never' ],
        'space-infix-ops': 1,
        'space-unary-ops': [ 1, { 'words': true, 'nonwords': false } ],
        'spaced-comment': [ 1, 'always', { 'exceptions': [ '*' ], 'markers': [ '**' ] } ],
        'wrap-regex': 1,

        // ES6
        'arrow-parens': 1,
        'arrow-spacing': 1,
        'constructor-super': 1,
        'generator-star-spacing': [ 1, 'after' ],
        'no-class-assign': 1,
        'no-const-assign': 1,
        'no-dupe-class-members': 1,
        'no-duplicate-imports': 1,
        'no-new-symbol': 1,
        'no-this-before-super': 1,
        'require-yield': 1,
        'template-curly-spacing': 1,
        'yield-star-spacing': [ 1, 'after' ]
    }
};
